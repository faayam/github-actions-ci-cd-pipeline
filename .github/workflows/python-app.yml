# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI/CD pipeline with github actions

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: docker login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: docker build flask app
        run: |
          docker build . -t faysalmehedi/pipeline-flask-github-actions:1.0.0
      - name: docker push
        run: |
          docker push faysalmehedi/pipeline-flask-github-actions:1.0.0

      - name: Login to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      # - name: Tag docker image and push to heroku registry
      #   env:
      #     HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      #   run: |
      #     docker tag faysalmehedi/pipeline-flask-github-actions:1.0.0 registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
      #     docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
      # - name: Release App
      #   env:
      #     HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      #   run: heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}

      - name: Build and push to heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web

      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web
